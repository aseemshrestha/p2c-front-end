{"ast":null,"code":"var _jsxFileName = \"/Users/aseshres/Desktop/p2c-frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"../css/App.css\";\nimport ApiService from \"../service/ApiService\";\nimport { Redirect } from \"react-router-dom\";\nimport { SESSION_STORAGE_TOKEN, SESSION_STORAGE_USERNAME } from \"../constants/Constants\";\nimport CryptoAES from \"crypto-js/aes\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logoutHandler = e => {\n      sessionStorage.setItem(SESSION_STORAGE_TOKEN, \"\");\n      sessionStorage.setItem(SESSION_STORAGE_USERNAME, \"\");\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.state = {\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem(SESSION_STORAGE_TOKEN) && sessionStorage.getItem(SESSION_STORAGE_USERNAME)) {\n      const key = sessionStorage.getItem(SESSION_STORAGE_TOKEN);\n      const data = sessionStorage.getItem(SESSION_STORAGE_USERNAME);\n      ApiService().getParentData(this.state).then(response => {\n        // console.log(response)\n        if (response.status === 200) {\n          //  console.log('here', response.headers.authorization);\n          sessionStorage.setItem(SESSION_STORAGE_TOKEN, response.headers.authorization);\n          let username = CryptoAES.encrypt(this.state.username, CIPHER_KEY);\n          sessionStorage.setItem(SESSION_STORAGE_USERNAME, username);\n          this.props.history.push(\"/dashboard\");\n        }\n      }).catch(error => {\n        if (error.response !== undefined && error.response.status === 401) {\n          this.setState({\n            message: \"Wrong username and password. Please try again.\"\n          });\n        } else {\n          console.log(\"Unavailable !\");\n        }\n      });\n      console.log(key, data);\n    } else {\n      this.setState({\n        redirect: true\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"breadcrumb-osahan pt-5 pb-5 bg-light position-relative text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"h6\", {\n      className: \"text-white-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Dasbboard\"), React.createElement(\"button\", {\n      onClick: this.logoutHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Logout\")));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/aseshres/Desktop/p2c-frontend/src/components/Dashboard.js"],"names":["React","Component","ApiService","Redirect","SESSION_STORAGE_TOKEN","SESSION_STORAGE_USERNAME","CryptoAES","Dashboard","constructor","props","logoutHandler","e","sessionStorage","setItem","setState","redirect","state","componentDidMount","getItem","key","data","getParentData","then","response","status","headers","authorization","username","encrypt","CIPHER_KEY","history","push","catch","error","undefined","message","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/App.css\";\nimport ApiService from \"../service/ApiService\";\nimport { Redirect } from \"react-router-dom\";\nimport { SESSION_STORAGE_TOKEN, SESSION_STORAGE_USERNAME } from \"../constants/Constants\";\nimport CryptoAES from \"crypto-js/aes\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    };\n  }\n  logoutHandler = e => {\n    sessionStorage.setItem(SESSION_STORAGE_TOKEN, \"\");\n    sessionStorage.setItem(SESSION_STORAGE_USERNAME, \"\");\n    this.setState({ redirect: true });\n  };\n\n  componentDidMount() {\n    if (sessionStorage.getItem(SESSION_STORAGE_TOKEN) && sessionStorage.getItem(SESSION_STORAGE_USERNAME)) {\n     const key = sessionStorage.getItem(SESSION_STORAGE_TOKEN);\n     const data = sessionStorage.getItem(SESSION_STORAGE_USERNAME);\n\n     ApiService().getParentData(this.state)\n     .then(response => {\n       // console.log(response)\n       if (response.status === 200) {\n       //  console.log('here', response.headers.authorization);\n         sessionStorage.setItem(SESSION_STORAGE_TOKEN,response.headers.authorization);\n         let username = CryptoAES.encrypt(this.state.username, CIPHER_KEY);\n         sessionStorage.setItem(SESSION_STORAGE_USERNAME,username);\n         this.props.history.push(\"/dashboard\");\n       }\n     })\n     .catch(error => {\n       if (error.response !== undefined && error.response.status === 401) {\n         this.setState({\n           message: `Wrong username and password. Please try again.`\n         });\n       } else {\n         console.log(\"Unavailable !\");\n       }\n     });\n     console.log(key, data);\n\n    } else {\n      this.setState({ redirect: true });\n    }\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={\"/\"} />;\n    }\n    return (\n      <div>\n        <section className=\"breadcrumb-osahan pt-5 pb-5 bg-light position-relative text-center\">\n          <h1 className=\"text-white\">Dashboard</h1>\n          <h6 className=\"text-white-50\">Dasbboard</h6>\n\n          <button onClick={this.logoutHandler}>Logout</button>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}